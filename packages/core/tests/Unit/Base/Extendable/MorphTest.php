<?php

namespace GetCandy\Tests\Unit\Base\Extendable;

use GetCandy\Facades\ModelManifest;
use GetCandy\Models\Product;
use GetCandy\Models\Url;
use Illuminate\Foundation\Testing\RefreshDatabase;

class MorphTest extends ExtendableTestCase
{
    use RefreshDatabase;

    protected Product $product;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        ModelManifest::register(collect([
            Product::class => \GetCandy\Tests\Stubs\Models\Product::class,
        ]));

        $this->product = \GetCandy\Tests\Stubs\Models\Product::query()->create(
            Product::factory()->raw()
        );
    }

    /** @test */
    public function can_get_url_morph_relation_when_using_extended_model()
    {
        $productUrl = $this->product->urls()->create([
            'slug' => 'foo-product',
            'default' => true,
            'language_id' => 1,
        ]);

        $this->assertDatabaseHas((new Url)->getTable(), [
            'element_type' => Product::class,
            'element_id' => $productUrl->element_id,
        ]);

        $this->assertEquals(Product::class, $this->product->getMorphClass());
        $this->assertInstanceOf(Url::class, $this->product->defaultUrl);
    }

    /** @test */
    public function can_get_media_thumbnail_morph_relation_when_using_extended_model()
    {
        $this->expectNotToPerformAssertions();
    }

    /** @test */
    public function can_get_prices_relation_when_using_extended_model()
    {
        $this->expectNotToPerformAssertions();
    }

    /** @test */
    public function can_return_the_correct_morph_class_when_using_enforce_morph_map()
    {
        $this->expectNotToPerformAssertions();
    }
}
